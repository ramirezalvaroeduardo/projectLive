{"version":3,"sources":["js/getAwesomeFontThemes.js","js/general.js","js/handleParticipants.js","js/getAllParticipants.js","js/MainMenu.js","js/addNewParticipant.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","fas","fasArray","Object","keys","definitions","getFAS","sreen","showArea","item","element","document","getElementById","elem2Hide","style","display","getAll","a","console","log","fetch","res","newPart","body","JSON","stringify","GetAllParts","then","resp","text","parts","dTBody","dRow","innerHTML","currRow","insertRow","dCellArray","dCell","length","push","insertCell","rowid","fullname","dob","age","gender","ethnicity","phone","email","address1","address2","city","state","zip","county","hastransport","SetAllParts","parse","GetAllParticipants","undefined","partsTable","map","part","Id","FullName","DOB","Age","Gender","Etdnicity","Phone","Email","Address1","Address2","City","State","Zip","Conty","HasTransport","partRecord","error","id","className","Table","responsive","striped","bordered","hover","MainMenu","props","Navbar","bg","expand","variant","Brand","href","icon","Toggle","aria-controls","Collapse","Nav","Link","onClick","event","addNewParticipant","preventDefault","addNew","getElementsByName","value","checked","response","catch","message","AddNewParticipantForm","Form","Row","Group","Label","Control","name","type","placeholder","required","min","max","as","custom","controlId","Check","label","Button","App","getAllParts","respParts","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"6TAIAA,IAAQC,IAAKC,KAEb,IAAIC,EAAWC,OAAOC,KAAML,IAAQM,YAAYJ,KAMjCK,MAJf,WACI,OAAOJ,G,QCRPK,EAAQ,CAAC,UAAW,WAExB,SAASC,EAAUC,GACf,IAAIC,EAAUC,SAASC,eAAgBH,GACnCI,EAAYF,SAASC,eAAeL,EAAM,IAClC,YAATE,IAAoBI,EAAYF,SAASC,eAAe,YAC3DF,EAAQI,MAAMC,QAAU,QACxBF,EAAUC,MAAMC,QAAU,O,sDCPfC,I,2EAAf,4BAAAC,EAAA,6DACIC,QAAQC,IAAI,6BADhB,SAEoBC,MACZ,sBAAuB,CACvB,OAAU,MACV,QAAW,CACP,OAAU,yDANtB,cAEQC,EAFR,gBASiBA,EATjB,oF,kEAYA,WAAsBC,GAAtB,eAAAL,EAAA,6DACIC,QAAQC,IAAI,sCADhB,SAEoBC,MACZ,qBAAsB,CACtB,OAAU,OACV,QAAW,CACP,eAAgB,qCAEpBG,KAAMC,KAAKC,UAAUH,KAR7B,cAEQD,EAFR,gBAUiBA,EAVjB,oF,iCCsBA,SAASK,IACLlB,EAAS,WACTQ,IACGW,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAE,IAjCZ,SAAqBC,GACjB,IAAIC,EAASpB,SAASC,eAAe,cAErC,IAAI,IAAIoB,KADRD,EAAOE,UAAY,GACHH,EAAM,CAGlB,IAFA,IAAII,EAAUH,EAAOI,UAAUH,GAC3BI,EAAa,GACTC,EAAQ,EAAGA,EAAQlC,OAAOC,KAAK0B,EAAME,IAAOM,OAAQD,IACxDD,EAAWG,KAAML,EAAQM,WAAWH,IAExCD,EAAW,GAAGH,UAAYH,EAAME,GAAMS,MACtCL,EAAW,GAAGH,UAAYH,EAAME,GAAMU,SACtCN,EAAW,GAAGH,UAAYH,EAAME,GAAMW,IACtCP,EAAW,GAAGH,UAAYH,EAAME,GAAMY,IACtCR,EAAW,GAAGH,UAAYH,EAAME,GAAMa,OACtCT,EAAW,GAAGH,UAAYH,EAAME,GAAMc,UACtCV,EAAW,GAAGH,UAAYH,EAAME,GAAMe,MACtCX,EAAW,GAAGH,UAAYH,EAAME,GAAMgB,MACtCZ,EAAW,GAAGH,UAAYH,EAAME,GAAMiB,SACtCb,EAAW,GAAGH,UAAYH,EAAME,GAAMkB,SACtCd,EAAW,IAAIH,UAAYH,EAAME,GAAMmB,KACvCf,EAAW,IAAIH,UAAYH,EAAME,GAAMoB,MACvChB,EAAW,IAAIH,UAAYH,EAAME,GAAMqB,IACvCjB,EAAW,IAAIH,UAAYH,EAAME,GAAMsB,OACvClB,EAAW,IAAIH,UAAYH,EAAME,GAAMuB,cAYvCC,CADgBhC,KAAKiC,MAAM5B,OAMnC,SAAS6B,EAAmB5B,SAEX6B,IAAV7B,GAAuBA,EAAMQ,QAAU,KACtCR,EAAQ,IACFS,KAAK,CACP,GAAK,KACL,SAAW,aACX,IAAM,aACN,IAAM,aACN,OAAS,aACT,UAAa,aACb,MAAS,aACT,MAAS,aACT,SAAY,aACZ,SAAY,aACZ,KAAQ,aACR,MAAS,aACT,IAAO,aACP,MAAS,aACT,gBAAiB,eAIzB,IAsBIqB,EAAa,KACjB,IACIA,EAAa9B,EAAM+B,KAAI,SAACC,GAAD,OAxBP,SAACA,GACjB,OACI,+BACI,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,WACV,6BAAKF,EAAKG,MACV,6BAAKH,EAAKI,MACV,6BAAKJ,EAAKK,SACV,6BAAKL,EAAKM,YACV,6BAAKN,EAAKO,QACV,6BAAKP,EAAKQ,QACV,6BAAKR,EAAKS,WACV,6BAAKT,EAAKU,WACV,6BAAKV,EAAKW,OACV,6BAAKX,EAAKY,QACV,6BAAKZ,EAAKa,MACV,6BAAKb,EAAKc,QACV,6BAAKd,EAAKe,kBAOeC,CAAWhB,MAC9C,MAAOiB,IAET,OACI,sBAAKC,GAAG,UAAUC,UAAU,YAA5B,UACI,6CACA,eAACC,EAAA,EAAD,CAAOC,WAAW,KAAKC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7C,UACI,gCACI,+BACI,oCACA,2CACA,qCACA,qCACA,wCACA,2CACA,uCACA,uCACA,yCACA,uCACA,sCACA,uCACA,qCACA,wCACA,oDAGR,uBAAON,GAAG,aAAV,SACKpB,UCjHrB,IAAI1D,EAAWI,IAiBAiF,MAff,SAAmBC,GACf,OACI,eAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,OAAO,KAAKC,QAAQ,OAAOX,UAAU,gBAA1D,UACA,eAACQ,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,UAA2B,cAAC,IAAD,CAAiBC,KAAM7F,EAAS,OAA3D,0BACA,cAACuF,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,cAACR,EAAA,EAAOS,SAAR,CAAiBlB,GAAG,mBAApB,SACI,eAACmB,EAAA,EAAD,CAAKlB,UAAU,UAAf,UACA,cAACkB,EAAA,EAAIC,KAAL,CAAUC,QAAS,SAAAC,GAAK,OAAI5E,KAA5B,8BACA,cAACyE,EAAA,EAAIC,KAAL,CAAUC,QAAS,SAAAC,GAAK,OAAI9F,EAAS,YAArC,uC,eCbZ,SAAS+F,EAAkBD,GACvBpF,QAAQC,IAAI,qCACZmF,EAAME,iB,2CAiBNC,CAhBqB,CAAC,QAAW,CAC7B,SAAmB9F,SAAS+F,kBAAkB,YAAY,GAAGC,MAC7D,IAAoBhG,SAAS+F,kBAAkB,OAAO,GAAGC,MACzD,IAAoBhG,SAAS+F,kBAAkB,OAAO,GAAGC,MACzD,OAAoBhG,SAAS+F,kBAAkB,UAAU,GAAGC,MAC5D,UAAoBhG,SAAS+F,kBAAkB,aAAa,GAAGC,MAC/D,MAAoBhG,SAAS+F,kBAAkB,SAAS,GAAGC,MAC3D,MAAoBhG,SAAS+F,kBAAkB,SAAS,GAAGC,MAC3D,SAAoBhG,SAAS+F,kBAAkB,YAAY,GAAGC,MAC9D,SAAoBhG,SAAS+F,kBAAkB,YAAY,GAAGC,MAC9D,KAAoBhG,SAAS+F,kBAAkB,QAAQ,GAAGC,MAC1D,MAAoBhG,SAAS+F,kBAAkB,SAAS,GAAGC,MAC3D,IAAoBhG,SAAS+F,kBAAkB,OAAO,GAAGC,MACzD,OAAoBhG,SAAS+F,kBAAkB,UAAU,GAAGC,MAC5D,aAAoBhG,SAAS+F,kBAAkB,gBAAgB,GAAGE,WAGrEjF,MAAK,SAAAkF,GACF3F,QAAQC,IAAI,6BAA8B0F,MAK7CC,OAAM,SAAA/B,GACH7D,QAAQC,IAAI,SAAU4D,EAAMgC,YAsGrBC,MAhGf,WACI,OACI,sBAAKhC,GAAG,UAAUC,UAAU,YAA5B,UACI,iDACA,eAACgC,EAAA,EAAD,CAAMhC,UAAU,aAAhB,UACI,cAACgC,EAAA,EAAKC,IAAN,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYlC,UAAU,wBAAtB,UACI,cAACgC,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,KAAK,OAAOC,YAAY,YAAYC,UAAQ,SAGlF,eAACR,EAAA,EAAKC,IAAN,WACI,eAACD,EAAA,EAAKE,MAAN,CAAalC,UAAU,uBAAvB,UACI,cAACgC,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,MAAMC,KAAK,OAAOC,YAAY,gBAAgBC,UAAQ,OAE7E,eAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAtB,UACI,cAACgC,EAAA,EAAKG,MAAN,kBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,MAAMC,KAAK,SAASC,YAAY,MAAME,IAAI,KAAKC,IAAI,MAAMF,UAAQ,UAG5F,eAACR,EAAA,EAAKC,IAAN,WACI,eAACD,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAtB,UACI,cAACgC,EAAA,EAAKG,MAAN,qBACA,eAACH,EAAA,EAAKI,QAAN,CAAcO,GAAG,SAASN,KAAK,SAASO,QAAM,EAACJ,UAAQ,EAAvD,UACI,4CACA,0CACA,iDACA,+CACA,8CACA,6CACA,iDAGR,eAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAtB,UACI,cAACgC,EAAA,EAAKG,MAAN,wBACA,eAACH,EAAA,EAAKI,QAAN,CAAcO,GAAG,SAASN,KAAK,YAAYO,QAAM,EAACJ,UAAQ,EAA1D,UACI,2CACA,2CACA,4CACA,2CACA,sDAIZ,eAACR,EAAA,EAAKC,IAAN,WACI,eAACD,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAtB,UACI,cAACgC,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,KAAK,UAAUC,YAAY,eAAeC,UAAQ,OAEjF,eAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAuB6C,UAAU,gBAAvD,UACI,cAACb,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,gBAAgBC,UAAQ,UAGpF,eAACR,EAAA,EAAKC,IAAN,WACI,eAACD,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAuB6C,UAAU,mBAAvD,UACI,cAACb,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,KAAK,OAAOC,YAAY,YAAYC,UAAQ,OAE9E,eAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAuB6C,UAAU,mBAAvD,UACI,cAACb,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,KAAK,OAAOC,YAAY,QAAQC,UAAQ,UAG9E,eAACR,EAAA,EAAKC,IAAN,WACI,eAACD,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAuB6C,UAAU,eAAvD,UACI,cAACb,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,KAAK,OAAOC,YAAY,OAAOC,UAAQ,OAErE,eAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAtB,UACI,cAACgC,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,KAAK,OAAOC,YAAY,QAAQC,UAAQ,OAEvE,eAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAtB,UACA,cAAIgC,EAAA,EAAKG,MAAT,kBACI,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,MAAMC,KAAK,OAAOC,YAAY,MAAMC,UAAQ,UAGvE,eAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,uBAAtB,UACI,cAACgC,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAASC,KAAK,OAAOC,YAAY,SAASC,UAAQ,OAEzE,cAACR,EAAA,EAAKE,MAAN,CAAYlC,UAAU,iBAAtB,SACI,cAACgC,EAAA,EAAKc,MAAN,CAAY/C,GAAG,eAAe6C,QAAM,EAACN,KAAK,SAASS,MAAM,qBAAqBV,KAAK,mBAEvF,cAACL,EAAA,EAAKE,MAAN,CAAYlC,UAAU,iBAAtB,SACI,cAACgD,EAAA,EAAD,CAAQrC,QAAQ,UAAU2B,KAAK,SAASlB,QAAS,SAAAC,GAAK,OAAIC,EAAkBD,IAA5E,6BCrFL4B,E,4MAhCX9E,MAAQ,CACNU,KAAM,GACNhC,MAAO,I,EAGXqG,YAAc,WACZnH,IACGW,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAE,GACJ,IAAIuG,EAAY5G,KAAKiC,MAAM5B,GAC3B,EAAKwG,SAAS,CAACvG,MAAOsG,IACtB1E,EAAmB0E,O,4CAIzB,WACE,OACE,gCACE,8BACE,cAAC,EAAD,MAEF,gCACE,cAAC1E,EAAD,CAAoB5B,MAAOwG,KAAKH,cAChC,cAAC,EAAD,c,GA3BQI,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhH,MAAK,YAAkD,IAA/CiH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,EAAD,IACAvI,SAASC,eAAe,SAM1B6H,M","file":"static/js/main.ce38eb79.chunk.js","sourcesContent":["\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add( fas );\r\n\r\nvar fasArray = Object.keys( library.definitions.fas );\r\n\r\nfunction getFAS() {\r\n    return fasArray;\r\n}\r\n\r\nexport default getFAS;\r\n","\r\nlet sreen = ['allPart', 'newPart'];\r\n\r\nfunction showArea( item ) {\r\n    let element = document.getElementById( item );\r\n    let elem2Hide = document.getElementById(sreen[1]);\r\n    if(item === 'newPart') elem2Hide = document.getElementById('allPart');\r\n    element.style.display = \"block\";\r\n    elem2Hide.style.display = \"none\";\r\n}\r\n\r\nexport {showArea};","\r\nasync function getAll(){\r\n    console.log('Requesting All records...');\r\n    let res = await fetch(\r\n        '/getAllParticipants', {\r\n        'method': 'GET',\r\n        'headers': {\r\n            'accept': 'application/x-www-form-urlencoded, application/json',\r\n        },\r\n    })\r\n    return await res;\r\n}\r\n\r\nasync function addNew(newPart){\r\n    console.log('Got to handleParticipant.AddNew...');\r\n    let res = await fetch(\r\n        '/addNewParticipant', {\r\n        'method': 'post',\r\n        'headers': {\r\n            'content-type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: JSON.stringify(newPart)\r\n    });\r\n    return await res;\r\n}\r\n\r\nexport {getAll, addNew}","\r\nimport React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../style/Participant.css';\r\nimport {getAll} from './handleParticipants';\r\nimport {showArea} from '../js/general';\r\n\r\n\r\nfunction SetAllParts(parts){\r\n    let dTBody = document.getElementById('partsTable');\r\n    dTBody.innerHTML = '';\r\n    for(let dRow in parts){\r\n        let currRow = dTBody.insertRow(dRow);\r\n        let dCellArray = [];\r\n        for(let dCell = 0; dCell < Object.keys(parts[dRow]).length; dCell++){\r\n            dCellArray.push( currRow.insertCell(dCell))\r\n        }\r\n        dCellArray[0].innerHTML = parts[dRow].rowid;\r\n        dCellArray[1].innerHTML = parts[dRow].fullname;\r\n        dCellArray[2].innerHTML = parts[dRow].dob;\r\n        dCellArray[3].innerHTML = parts[dRow].age\r\n        dCellArray[4].innerHTML = parts[dRow].gender\r\n        dCellArray[5].innerHTML = parts[dRow].ethnicity\r\n        dCellArray[6].innerHTML = parts[dRow].phone\r\n        dCellArray[7].innerHTML = parts[dRow].email\r\n        dCellArray[8].innerHTML = parts[dRow].address1\r\n        dCellArray[9].innerHTML = parts[dRow].address2\r\n        dCellArray[10].innerHTML = parts[dRow].city\r\n        dCellArray[11].innerHTML = parts[dRow].state\r\n        dCellArray[12].innerHTML = parts[dRow].zip\r\n        dCellArray[13].innerHTML = parts[dRow].county\r\n        dCellArray[14].innerHTML = parts[dRow].hastransport;\r\n    }\r\n}\r\n\r\nfunction GetAllParts() {\r\n    showArea('allPart');\r\n    getAll()\r\n      .then(resp => {\r\n        return resp.text();\r\n      })\r\n      .then(text => {\r\n        let respParts = JSON.parse(text);\r\n        SetAllParts(respParts);\r\n      })\r\n  }\r\n\r\n\r\nfunction GetAllParticipants(parts){\r\n\r\n    if(parts === undefined || parts.length <= 0){\r\n        parts = [];\r\n        parts.push({\r\n            'Id':'NA',\r\n            'FullName':'No Records',\r\n            'DOB':'No Records',\r\n            'Age':'No Records',\r\n            'Gender':'No Records',\r\n            'Ethnicity': 'No Records',\r\n            'Phone': 'No Records',\r\n            'Email': 'No Records',\r\n            'Address1': 'No Records',\r\n            'Address2': 'No Records',\r\n            'City': 'No Records',\r\n            'State': 'No Records',\r\n            'Zip': 'No Records',\r\n            'Conty': 'No Records',\r\n            'Has Transport': 'No Records',\r\n        });\r\n    }\r\n\r\n    const partRecord  = (part) => {\r\n        return(\r\n            <tr>\r\n                <td>{part.Id}</td>\r\n                <td>{part.FullName}</td>\r\n                <td>{part.DOB}</td>\r\n                <td>{part.Age}</td>\r\n                <td>{part.Gender}</td>\r\n                <td>{part.Etdnicity}</td>\r\n                <td>{part.Phone}</td>\r\n                <td>{part.Email}</td>\r\n                <td>{part.Address1}</td>\r\n                <td>{part.Address2}</td>\r\n                <td>{part.City}</td>\r\n                <td>{part.State}</td>\r\n                <td>{part.Zip}</td>\r\n                <td>{part.Conty}</td>\r\n                <td>{part.HasTransport}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    let partsTable = null;\r\n    try{\r\n        partsTable = parts.map((part) => partRecord(part));\r\n    } catch( error) {}\r\n\r\n    return(\r\n        <div id='allPart' className='GetAllDiv'>\r\n            <h3>Participant</h3>\r\n            <Table responsive='xl' striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Full Name</th>\r\n                        <th>DOB</th>\r\n                        <th>Age</th>\r\n                        <th>Gender</th>\r\n                        <th>Ethnicity</th>\r\n                        <th>Phone</th>\r\n                        <th>Email</th>\r\n                        <th>Address</th>\r\n                        <th>Apt/#</th>\r\n                        <th>City</th>\r\n                        <th>State</th>\r\n                        <th>Zip</th>\r\n                        <th>County</th>\r\n                        <th>Has Transport</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id='partsTable'>\r\n                    {partsTable}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {GetAllParts, GetAllParticipants};\r\n","\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport '../style/NavBar.css';\r\nimport getFAS from './getAwesomeFontThemes';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {showArea} from '../js/general';\r\nimport {GetAllParts} from \"./getAllParticipants\";\r\n\r\nlet fasArray = getFAS();\r\n\r\nfunction MainMenu( props ) {\r\n    return (\r\n        <Navbar bg=\"success\" expand=\"lg\" variant=\"dark\" className='navbar-custom'>\r\n        <Navbar.Brand href=\"#home\"><FontAwesomeIcon icon={fasArray[847]}/>&nbsp;&nbsp;Project Live</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link onClick={event => GetAllParts()} >Get_Participants</Nav.Link>\r\n            <Nav.Link onClick={event => showArea('newPart')} >Add_Participants</Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nexport default MainMenu;\r\n","\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {addNew} from '../js/handleParticipants';\r\nimport '../style/Participant.css';\r\n\r\nfunction addNewParticipant(event){\r\n    console.log('Got to MainMenu.addNewParticipant');\r\n    event.preventDefault();\r\n    let newParticipant = {'newPart': {\r\n        'FullName'       : document.getElementsByName('FullName')[0].value,\r\n        'DOB'             : document.getElementsByName('DOB')[0].value,\r\n        'Age'             : document.getElementsByName('Age')[0].value,\r\n        'Gender'          : document.getElementsByName('Gender')[0].value,\r\n        'Ethnicity'       : document.getElementsByName('Ethnicity')[0].value,\r\n        'Phone'           : document.getElementsByName('Phone')[0].value,\r\n        'Email'           : document.getElementsByName('Email')[0].value,\r\n        'Address1'        : document.getElementsByName('Address1')[0].value,\r\n        'Address2'        : document.getElementsByName('Address2')[0].value,\r\n        'City'            : document.getElementsByName('City')[0].value,\r\n        'State'           : document.getElementsByName('State')[0].value,\r\n        'Zip'             : document.getElementsByName('Zip')[0].value,\r\n        'County'          : document.getElementsByName('County')[0].value,\r\n        'HasTransport'    : document.getElementsByName('HasTransport')[0].checked,\r\n    }}\r\n    addNew(newParticipant)\r\n    .then(response => {\r\n        console.log('POST addNew - from Server:', response);\r\n      //this.setState({\r\n      //    participants: response\r\n      //})\r\n    })\r\n    .catch(error => { \r\n        console.log('Error:', error.message)\r\n    });\r\n}\r\n\r\n//<!--Form.Control name='Gender' type='text' placeholder='Gender' required/-->\r\n\r\nfunction AddNewParticipantForm(){\r\n    return(\r\n        <div id='newPart' className='AddNewDiv'>\r\n            <h3>New Participant</h3>\r\n            <Form className='AddNewForm'>\r\n                <Form.Row>\r\n                    <Form.Group className='form-group col col-12'>\r\n                        <Form.Label>Full Name</Form.Label>\r\n                        <Form.Control name='FullName' type='text' placeholder='Full Name' required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group  className='form-group col col-8'>\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <Form.Control name='DOB' type='date' placeholder='Date of Birth' required/>\r\n                    </Form.Group>\r\n                    <Form.Group className='form-group col col-4'>\r\n                        <Form.Label>Age</Form.Label>\r\n                        <Form.Control name='Age' type='number' placeholder='Age' min='18' max='120' required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group className='form-group col col-6'>\r\n                        <Form.Label>Gender</Form.Label>\r\n                        <Form.Control as='select' name='Gender' custom required>\r\n                            <option>Female</option>\r\n                            <option>Male</option>\r\n                            <option>TransFemale</option>\r\n                            <option>TransMale</option>\r\n                            <option>Intersex</option>\r\n                            <option>Unknown</option>\r\n                            <option>Other</option>\r\n                        </Form.Control>\r\n                     </Form.Group>\r\n                    <Form.Group className='form-group col col-6'>\r\n                        <Form.Label>Ethnicity</Form.Label>\r\n                        <Form.Control as='select' name='Ethnicity' custom required>\r\n                            <option>Asian</option>\r\n                            <option>Black</option>\r\n                            <option>Native</option>\r\n                            <option>White</option>\r\n                            <option>Unknown</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group className='form-group col col-6'>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control name='Phone' type='integer' placeholder='Phone Number' required/>\r\n                    </Form.Group>\r\n                    <Form.Group className='form-group col col-6' controlId='formGridEmail'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control name='Email' type='email' placeholder='Email Address' required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group className='form-group col col-9' controlId='formGridAddress1'>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control name='Address1' type='text' placeholder='Address 1' required/>\r\n                    </Form.Group>\r\n                    <Form.Group className='form-group col col-3' controlId='formGridAddress1'>\r\n                        <Form.Label>Apt/#</Form.Label>\r\n                        <Form.Control name='Address2' type='text' placeholder='Apt/#' required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group className='form-group col col-6' controlId='formGridCity'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control name='City' type='text' placeholder='City' required/>\r\n                    </Form.Group>\r\n                    <Form.Group className='form-group col col-3'>\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control name='State' type='text' placeholder='State' required/>\r\n                    </Form.Group>\r\n                    <Form.Group className='form-group col col-3'>\r\n                    <   Form.Label>Zip</Form.Label>\r\n                        <Form.Control name='Zip' type='text' placeholder='Zip' required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group className='form-group col col-8'>\r\n                    <Form.Label>County</Form.Label>\r\n                    <Form.Control name='County' type='text' placeholder='County' required/>\r\n                </Form.Group>\r\n                <Form.Group className='form-group col'>\r\n                    <Form.Check id='HasTransport' custom type='switch' label='Has Transportation' name='HasTransport'/>\r\n                </Form.Group>\r\n                <Form.Group className='form-group col'>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={event => addNewParticipant(event)}>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewParticipantForm;","import React from 'react';\nimport './style/App.css';\nimport MainMenu from \"./js/MainMenu\";\nimport AddNewParticipantForm from './js/addNewParticipant';\nimport {GetAllParticipants} from './js/getAllParticipants';\nimport {getAll} from './js/handleParticipants';\n\nclass App extends React.Component {\n\n    state = {\n      part: {},\n      parts: []\n    }\n\n  getAllParts = () => {\n    getAll()\n      .then(resp => {\n        return resp.text();\n      })\n      .then(text => {\n        let respParts = JSON.parse(text);\n        this.setState({parts: respParts});\n        GetAllParticipants(respParts);\n      })\n  }\n\n  render(){\n    return(\n      <div>\n        <div>\n          <MainMenu/>\n        </div>\n        <div>\n          <GetAllParticipants parts={this.getAllParts}/>\n          <AddNewParticipantForm/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}